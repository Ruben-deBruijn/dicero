[{"/Users/ruben/Workspace/School/arj-frontend/src/index.js":"1","/Users/ruben/Workspace/School/arj-frontend/src/components/index.js":"2","/Users/ruben/Workspace/School/arj-frontend/src/components/App/App.jsx":"3","/Users/ruben/Workspace/School/arj-frontend/src/providers/Theme.provider.jsx":"4","/Users/ruben/Workspace/School/arj-frontend/src/theme/index.js":"5","/Users/ruben/Workspace/School/arj-frontend/src/theme/colors/index.js":"6","/Users/ruben/Workspace/School/arj-frontend/src/theme/colors/colorsDefault.js":"7","/Users/ruben/Workspace/School/arj-frontend/src/components/layout/index.js":"8","/Users/ruben/Workspace/School/arj-frontend/src/components/App/App.style.js":"9","/Users/ruben/Workspace/School/arj-frontend/src/components/layout/Main/Main.jsx":"10","/Users/ruben/Workspace/School/arj-frontend/src/components/navigation/index.js":"11","/Users/ruben/Workspace/School/arj-frontend/src/components/navigation/Topbar/Topbar.jsx":"12","/Users/ruben/Workspace/School/arj-frontend/src/components/navigation/Topbar/Topbar.style.js":"13","/Users/ruben/Workspace/School/arj-frontend/src/components/navigation/Drawer/Drawer.jsx":"14","/Users/ruben/Workspace/School/arj-frontend/src/components/navigation/Drawer/Drawer.style.js":"15","/Users/ruben/Workspace/School/arj-frontend/src/routes/routes.jsx":"16","/Users/ruben/Workspace/School/arj-frontend/src/routes/paths.js":"17","/Users/ruben/Workspace/School/arj-frontend/src/pages/index.js":"18","/Users/ruben/Workspace/School/arj-frontend/src/pages/overview/Overview.page.jsx":"19","/Users/ruben/Workspace/School/arj-frontend/src/pages/admin/Admin.page.jsx":"20","/Users/ruben/Workspace/School/arj-frontend/src/components/forms/index.js":"21","/Users/ruben/Workspace/School/arj-frontend/src/components/forms/Client.form.jsx":"22","/Users/ruben/Workspace/School/arj-frontend/src/components/forms/User.form.jsx":"23","/Users/ruben/Workspace/School/arj-frontend/src/components/fields/index.js":"24","/Users/ruben/Workspace/School/arj-frontend/src/components/fields/SelectField.jsx":"25","/Users/ruben/Workspace/School/arj-frontend/src/components/fields/TextField.jsx":"26","/Users/ruben/Workspace/School/arj-frontend/src/components/fields/field.style.js":"27","/Users/ruben/Workspace/School/arj-frontend/src/graphql/index.js":"28","/Users/ruben/Workspace/School/arj-frontend/src/graphql/clients/Client.mutations.js":"29","/Users/ruben/Workspace/School/arj-frontend/src/graphql/clients/Client.queries.js":"30","/Users/ruben/Workspace/School/arj-frontend/src/graphql/users/User.queries.js":"31","/Users/ruben/Workspace/School/arj-frontend/src/graphql/users/User.mutations.js":"32","/Users/ruben/Workspace/School/arj-frontend/src/pages/listpages/Dossier_list.page.jsx":"33","/Users/ruben/Workspace/School/arj-frontend/src/pages/listpages/Client_list.page.jsx":"34","/Users/ruben/Workspace/School/arj-frontend/src/constants/general.const.js":"35","/Users/ruben/Workspace/School/arj-frontend/src/components/layout/DetailView/DetailView.jsx":"36","/Users/ruben/Workspace/School/arj-frontend/src/pages/dossier/Create_dossier.page.jsx":"37","/Users/ruben/Workspace/School/arj-frontend/src/components/forms/Observation.form.jsx":"38","/Users/ruben/Workspace/School/arj-frontend/src/graphql/observation_file/ObservationFile.mutations.js":"39","/Users/ruben/Workspace/School/arj-frontend/src/components/forms/CreateObservationFile.form.jsx":"40","/Users/ruben/Workspace/School/arj-frontend/src/graphql/observation_file/ObservationFile.queries.js":"41","/Users/ruben/Workspace/School/arj-frontend/src/components/forms/Overview.form.jsx":"42","/Users/ruben/Workspace/School/arj-frontend/src/components/Dictaphone/Dictaphone.jsx":"43","/Users/ruben/Workspace/School/arj-frontend/src/graphql/observations/Observation.mutation.js":"44","/Users/ruben/Workspace/School/arj-frontend/src/components/fields/CheckboxField.jsx":"45","/Users/ruben/Workspace/School/arj-frontend/src/components/navigation/Bottombar/Bottombar.jsx":"46","/Users/ruben/Workspace/School/arj-frontend/src/helpers/general.helper.js":"47","/Users/ruben/Workspace/School/arj-frontend/src/components/layout/ListPair/ListPair.jsx":"48","/Users/ruben/Workspace/School/arj-frontend/src/providers/User.provider.jsx":"49","/Users/ruben/Workspace/School/arj-frontend/src/providers/index.js":"50","/Users/ruben/Workspace/School/arj-frontend/src/components/App/DialogWelcome/DialogWelcome.jsx":"51"},{"size":945,"mtime":1611588513526,"results":"52","hashOfConfig":"53"},{"size":182,"mtime":1611090364521,"results":"54","hashOfConfig":"53"},{"size":1892,"mtime":1611770993684,"results":"55","hashOfConfig":"53"},{"size":689,"mtime":1608654543211,"results":"56","hashOfConfig":"53"},{"size":1496,"mtime":1611492088250,"results":"57","hashOfConfig":"53"},{"size":59,"mtime":1608654200771,"results":"58","hashOfConfig":"53"},{"size":946,"mtime":1610717441788,"results":"59","hashOfConfig":"53"},{"size":170,"mtime":1611264789519,"results":"60","hashOfConfig":"53"},{"size":593,"mtime":1611089023532,"results":"61","hashOfConfig":"53"},{"size":474,"mtime":1611247446908,"results":"62","hashOfConfig":"53"},{"size":64,"mtime":1608725653526,"results":"63","hashOfConfig":"53"},{"size":3425,"mtime":1611837274690,"results":"64","hashOfConfig":"53"},{"size":474,"mtime":1611242263343,"results":"65","hashOfConfig":"53"},{"size":7515,"mtime":1611837270245,"results":"66","hashOfConfig":"53"},{"size":620,"mtime":1611769638905,"results":"67","hashOfConfig":"53"},{"size":807,"mtime":1611496372082,"results":"68","hashOfConfig":"53"},{"size":229,"mtime":1609614876336,"results":"69","hashOfConfig":"53"},{"size":354,"mtime":1609615058356,"results":"70","hashOfConfig":"53"},{"size":9950,"mtime":1611837718000,"results":"71","hashOfConfig":"53"},{"size":6029,"mtime":1611268916358,"results":"72","hashOfConfig":"53"},{"size":314,"mtime":1610052635973,"results":"73","hashOfConfig":"53"},{"size":2332,"mtime":1611405360375,"results":"74","hashOfConfig":"53"},{"size":3309,"mtime":1611494607428,"results":"75","hashOfConfig":"53"},{"size":167,"mtime":1611054202324,"results":"76","hashOfConfig":"53"},{"size":1859,"mtime":1611772401580,"results":"77","hashOfConfig":"53"},{"size":1474,"mtime":1609253997841,"results":"78","hashOfConfig":"53"},{"size":327,"mtime":1609253997842,"results":"79","hashOfConfig":"53"},{"size":581,"mtime":1611002229249,"results":"80","hashOfConfig":"53"},{"size":991,"mtime":1609690578557,"results":"81","hashOfConfig":"53"},{"size":588,"mtime":1610025956728,"results":"82","hashOfConfig":"53"},{"size":437,"mtime":1609269152796,"results":"83","hashOfConfig":"53"},{"size":1101,"mtime":1611494497648,"results":"84","hashOfConfig":"53"},{"size":2920,"mtime":1611567390403,"results":"85","hashOfConfig":"53"},{"size":2999,"mtime":1611567308682,"results":"86","hashOfConfig":"53"},{"size":190,"mtime":1611237035540,"results":"87","hashOfConfig":"53"},{"size":4964,"mtime":1611404790678,"results":"88","hashOfConfig":"53"},{"size":3212,"mtime":1611585606486,"results":"89","hashOfConfig":"53"},{"size":8051,"mtime":1611767563406,"results":"90","hashOfConfig":"53"},{"size":845,"mtime":1611588260757,"results":"91","hashOfConfig":"53"},{"size":2998,"mtime":1611568599536,"results":"92","hashOfConfig":"53"},{"size":975,"mtime":1611264174526,"results":"93","hashOfConfig":"53"},{"size":5105,"mtime":1611569479771,"results":"94","hashOfConfig":"53"},{"size":2109,"mtime":1611582279344,"results":"95","hashOfConfig":"53"},{"size":291,"mtime":1611002499474,"results":"96","hashOfConfig":"53"},{"size":814,"mtime":1611054186566,"results":"97","hashOfConfig":"53"},{"size":1875,"mtime":1611097043158,"results":"98","hashOfConfig":"53"},{"size":906,"mtime":1611581592845,"results":"99","hashOfConfig":"53"},{"size":676,"mtime":1611265198177,"results":"100","hashOfConfig":"53"},{"size":503,"mtime":1611496208382,"results":"101","hashOfConfig":"53"},{"size":119,"mtime":1611403132262,"results":"102","hashOfConfig":"53"},{"size":8177,"mtime":1611770810579,"results":"103","hashOfConfig":"53"},{"filePath":"104","messages":"105","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"106"},"52v0vt",{"filePath":"107","messages":"108","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"106"},{"filePath":"109","messages":"110","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"106"},{"filePath":"111","messages":"112","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"106"},{"filePath":"113","messages":"114","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"106"},{"filePath":"115","messages":"116","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"106"},{"filePath":"117","messages":"118","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"119","usedDeprecatedRules":"106"},{"filePath":"120","messages":"121","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"106"},{"filePath":"122","messages":"123","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"106"},{"filePath":"124","messages":"125","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"126"},{"filePath":"127","messages":"128","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"106"},{"filePath":"129","messages":"130","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"106"},{"filePath":"131","messages":"132","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"106"},{"filePath":"133","messages":"134","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"135","usedDeprecatedRules":"106"},{"filePath":"136","messages":"137","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"138","usedDeprecatedRules":"106"},{"filePath":"139","messages":"140","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"106"},{"filePath":"141","messages":"142","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"106"},{"filePath":"143","messages":"144","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"106"},{"filePath":"145","messages":"146","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"147","usedDeprecatedRules":"106"},{"filePath":"148","messages":"149","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"106"},{"filePath":"150","messages":"151","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"106"},{"filePath":"152","messages":"153","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"106"},{"filePath":"154","messages":"155","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"106"},{"filePath":"156","messages":"157","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"106"},{"filePath":"158","messages":"159","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"160","usedDeprecatedRules":"106"},{"filePath":"161","messages":"162","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"106"},{"filePath":"163","messages":"164","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"106"},{"filePath":"165","messages":"166","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"106"},{"filePath":"167","messages":"168","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"106"},{"filePath":"169","messages":"170","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"106"},{"filePath":"171","messages":"172","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"106"},{"filePath":"173","messages":"174","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"106"},{"filePath":"175","messages":"176","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"106"},{"filePath":"177","messages":"178","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"179","usedDeprecatedRules":"106"},{"filePath":"180","messages":"181","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"106"},{"filePath":"182","messages":"183","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"184","usedDeprecatedRules":"106"},{"filePath":"185","messages":"186","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"106"},{"filePath":"187","messages":"188","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"106"},{"filePath":"189","messages":"190","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"106"},{"filePath":"191","messages":"192","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"193","usedDeprecatedRules":"106"},{"filePath":"194","messages":"195","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"106"},{"filePath":"196","messages":"197","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"106"},{"filePath":"198","messages":"199","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"106"},{"filePath":"200","messages":"201","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"106"},{"filePath":"202","messages":"203","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"106"},{"filePath":"204","messages":"205","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"106"},{"filePath":"206","messages":"207","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"106"},{"filePath":"208","messages":"209","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"106"},{"filePath":"210","messages":"211","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"212","usedDeprecatedRules":"106"},{"filePath":"213","messages":"214","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"215","messages":"216","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"106"},"/Users/ruben/Workspace/School/arj-frontend/src/index.js",[],["217","218"],"/Users/ruben/Workspace/School/arj-frontend/src/components/index.js",[],"/Users/ruben/Workspace/School/arj-frontend/src/components/App/App.jsx",[],"/Users/ruben/Workspace/School/arj-frontend/src/providers/Theme.provider.jsx",[],"/Users/ruben/Workspace/School/arj-frontend/src/theme/index.js",[],"/Users/ruben/Workspace/School/arj-frontend/src/theme/colors/index.js",[],"/Users/ruben/Workspace/School/arj-frontend/src/theme/colors/colorsDefault.js",["219"],"export const colorsDefault = {\n\n    primary: {\n        light: '#004B63',\n        main: '#0C3C60',\n        dark: '#002E3D',\n    },\n    secondary: {\n        light: '#1A8DB0',\n        main: '#1984A4',\n        dark: '#0F5063',\n    },\n    error: {\n        main: '#fa2d48',\n      },\n    warning: {\n        main: '#ff9e00',\n    },\n    success: {\n        main: '#00983c',\n    },\n    grey: {\n        0: '#ffffff',\n        25: '#f2f2f2',\n        50: '#e3e5e9',\n        100: '#c3c7d0',\n        200: '#959caa',\n        300: '#7b8598',\n        400: '#6b7689',\n        500: '#5e6778',\n        600: '#515867',\n        700: '#434a56',\n        800: '#363b45',\n        900: '#282c33',\n        1000: '#000000',\n        A100: '#e2e8f3',\n        A200: '#99aed6',\n        A400: '#637aa6',\n        A700: '#63718c',\n      }\n};\n\nexport default {\n    ...colorsDefault,\n    text: {\n      primary: colorsDefault.grey[700],\n      secondary: colorsDefault.grey[0],\n    },\n  };","/Users/ruben/Workspace/School/arj-frontend/src/components/layout/index.js",[],"/Users/ruben/Workspace/School/arj-frontend/src/components/App/App.style.js",[],"/Users/ruben/Workspace/School/arj-frontend/src/components/layout/Main/Main.jsx",[],["220","221"],"/Users/ruben/Workspace/School/arj-frontend/src/components/navigation/index.js",[],"/Users/ruben/Workspace/School/arj-frontend/src/components/navigation/Topbar/Topbar.jsx",[],"/Users/ruben/Workspace/School/arj-frontend/src/components/navigation/Topbar/Topbar.style.js",[],"/Users/ruben/Workspace/School/arj-frontend/src/components/navigation/Drawer/Drawer.jsx",["222","223","224"],"import React, { Fragment, useContext, useEffect, useState } from 'react';\nimport PropTypes from 'prop-types';\nimport { useQuery } from '@apollo/client';\nimport { useHistory } from 'react-router-dom';\nimport { Controller, useForm } from 'react-hook-form';\nimport { useSnackbar } from 'notistack';\n\n// Icons\nimport { AddOutlined, Assignment, Close, ExitToApp, People, Security, TodayOutlined } from '@material-ui/icons';\n\n// Core\nimport { \n    Avatar,\n    Box, \n    Button, \n    Dialog, \n    DialogContent, \n    Divider, \n    Drawer as MuiDrawer, \n    IconButton, \n    List, \n    ListItem, \n    ListItemIcon, \n    ListItemText, \n    Typography\n} from '@material-ui/core';\nimport { SelectField, TextField } from '../../fields';\nimport { UserContext } from '../../../providers/User.provider';\n\n// GraphQL\nimport { GET_USERS } from '../../../graphql';\n\n// Routing\nimport { \n    ADMIN_PATH, \n    CLIENT_LIST_PATH, \n    CREATE_DOSSIER_PATH, \n    DOSSIER_LIST_PATH, \n    OVERVIEW_PATH,\n} from '../../../routes/paths';\n\n// Styles\nimport { useDrawerStyles } from './Drawer.style';\n\nconst GetUsers = () => {\n    const { loading, data } = useQuery(GET_USERS, {\n      fetchPolicy: 'cache-and-network',\n    });\n  \n    if (loading) return { usersLoading: true, users: [] };\n    return (data && { usersLoading: false, users: data.getUsers }) || [];\n};\n\nconst Drawer = ({ isOpen, handleClose}) => {\n  const classes = useDrawerStyles();\n  const history = useHistory();\n  const { control, handleSubmit, setValue} = useForm();\n  const { enqueueSnackbar } = useSnackbar();\n\n  const { setUser, userState } = useContext(UserContext);\n  const { loading, users} = GetUsers();\n\n  const [openDialog, setDialogOpen] = useState(false);\n\n  useEffect(() => {\n      setValue('user_select', userState);\n  }, []);\n\n  const onAdminClick = () => {\n      if (!localStorage.getItem('user') && !localStorage.getItem('password')) {\n          setDialogOpen(true)\n      } else {\n        history.push(ADMIN_PATH);\n      }\n  }\n\n  const logout = () => {\n    setUser(null);\n    history.push('/')\n    enqueueSnackbar(`Succesvol uitgelogd!`, { variant: 'success' });\n  };\n\n  const handleFormSubmit = async values => {\n    if (values.user === 'admin' && values.password === '1234') {\n        localStorage.setItem('user', values.user);\n        localStorage.setItem('password', values.password);\n        history.push(ADMIN_PATH);\n        setDialogOpen(false);\n    } else {\n        enqueueSnackbar(`Gebruikersgegevens zijn verkeerd of u heeft geen toegang`, { variant: 'error' });\n    }\n  };\n\n  if (loading) return 'Loading';\n\n  return (\n    <Fragment>\n        <MuiDrawer anchor=\"right\" open={isOpen} onClose={handleClose} classes={{ paper: classes.drawerPaper }}>\n            <div>\n                <IconButton onClick={handleClose} className={classes.closeButton}>\n                    <Close />\n                </IconButton>\n            </div>\n\n            <Box mx={2} pt={2} pb={1}>\n                <Divider />\n            </Box>\n\n            <Box display=\"flex\" flexDirection=\"column\">\n                <ListItem className={classes.listItem} style={{ pointerEvents: 'none' }} button>\n                    <Avatar alt={userState.name} style={{ marginRight: 16 }}>\n                        {userState.name.charAt(0)}\n                    </Avatar>\n                    <ListItemText primary={userState.name} />\n                </ListItem>\n            </Box>\n\n            <Box mx={2} py={2}>\n                <Divider />\n            </Box>\n\n            <Box display=\"flex\" flexDirection=\"column\" justifyContent=\"space-between\" minWidth={300}>\n                <List>\n                    <ListItem button className={classes.listItem} onClick={() => history.push(OVERVIEW_PATH)}>\n                        <ListItemIcon color=\"inherit\">\n                            <TodayOutlined />\n                        </ListItemIcon>\n                        <ListItemText primary=\"Dagoverzicht\" />\n                    </ListItem>\n                    <ListItem \n                        button \n                        className={classes.listItem} \n                        onClick={() => history.push(CREATE_DOSSIER_PATH)}\n                        disabled={!userState}\n                    >\n                        <ListItemIcon color=\"inherit\">\n                            <AddOutlined />\n                        </ListItemIcon>\n                        <ListItemText primary=\"Nieuw Observatiedossier\" />\n                    </ListItem>\n                    <ListItem button className={classes.listItem} onClick={() => history.push(CLIENT_LIST_PATH)}>\n                        <ListItemIcon>\n                            <People />\n                        </ListItemIcon>\n                        <ListItemText primary=\"Cliëntenoverzicht\" />\n                    </ListItem>\n                    <ListItem button className={classes.listItem} onClick={() => history.push(DOSSIER_LIST_PATH)}>\n                        <ListItemIcon>\n                            <Assignment />\n                        </ListItemIcon>\n                        <ListItemText primary=\"Dossieroverzicht\" />\n                    </ListItem>\n                </List>\n\n                <Box mx={2} py={2}>\n                    <Divider />\n                </Box>\n                {history.location.pathname !== '/admin' && (\n                    <List disablePadding>\n                        <ListItem button className={classes.listItem} onClick={onAdminClick}>\n                            <ListItemIcon>\n                                <Security />\n                            </ListItemIcon>\n                            <ListItemText primary=\"Administratie\" />\n                        </ListItem>\n                    </List>\n                )}\n            </Box>\n\n            <Box mx={2} py={2}>\n                <Divider />\n            </Box>\n\n            <ListItem button className={classes.listItem} onClick={() => logout()}>\n                <ListItemIcon>\n                    <ExitToApp />\n                </ListItemIcon>\n                <ListItemText primary=\"Uitloggen\" />\n            </ListItem>\n        </MuiDrawer>\n\n        <Dialog open={openDialog}>\n            <DialogContent>\n                <Typography color=\"primary\" gutterBottom>\n                    Authenticatie\n                </Typography>\n                <form onSubmit={handleSubmit(handleFormSubmit)}>\n                    <Controller\n                        control={control}\n                        as={TextField} \n                        label=\"Gebruiker\"\n                        name=\"user\"\n                        fullWidth\n                    />\n\n                    <Controller\n                        control={control}\n                        as={TextField} \n                        label=\"Wachtwoord\"\n                        name=\"password\"\n                        fullWidth\n                    />\n                    <Box display=\"flex\" justifyContent=\"space-between\" py={2}>\n                        <Button variant=\"contained\" color=\"primary\" type=\"submit\">\n                            Bevestigen\n                        </Button>\n                        <Button variant=\"outlined\" color=\"primary\" onClick={() => setDialogOpen(false)}>\n                            Sluiten\n                        </Button>\n                    </Box>\n                </form>\n            </DialogContent>\n        </Dialog>\n    </Fragment>\n  )\n};\n\nDrawer.propTypes = {\n    isOpen: PropTypes.bool,\n    handleClose: PropTypes.func.isRequired,\n};\n\nexport default Drawer;\n","/Users/ruben/Workspace/School/arj-frontend/src/components/navigation/Drawer/Drawer.style.js",["225"],"import { makeStyles, fade } from '@material-ui/core/styles';\n\nexport const useDrawerStyles = makeStyles(theme => ({\n    drawerPaper: {\n        backgroundColor: theme.palette.primary.main,\n        color: theme.palette.common.white,\n    },\n\n    listItem: {\n        padding: theme.spacing(1.25, 2),\n        color: theme.palette.common.white,\n        '&:hover': {\n            backgroundColor: theme.palette.secondary.main,\n        },\n    },\n\n    closeButton: {\n        color: 'inherit',\n        padding: theme.spacing(2),\n        '&:hover': {\n            backgroundColor: theme.palette.secondary.main,\n        },\n    },\n}));","/Users/ruben/Workspace/School/arj-frontend/src/routes/routes.jsx",[],"/Users/ruben/Workspace/School/arj-frontend/src/routes/paths.js",[],"/Users/ruben/Workspace/School/arj-frontend/src/pages/index.js",[],"/Users/ruben/Workspace/School/arj-frontend/src/pages/overview/Overview.page.jsx",["226","227"],"import React, { useEffect, useState } from 'react';\n\n// Core\nimport { \n    Accordion, \n    AccordionDetails, \n    AccordionSummary, \n    Box, \n    Button, \n    CircularProgress,\n    Dialog, \n    DialogActions, \n    DialogContent, \n    IconButton, \n    Link, \n    Typography, \n    Zoom \n} from '@material-ui/core';\nimport { ExpandMoreOutlined, InfoOutlined } from '@material-ui/icons';\nimport { DetailView, Main } from '../../components/layout';\nimport { GET_OBSERVATION_FILES } from '../../graphql/observation_file/ObservationFile.queries';\nimport { useMutation, useQuery } from '@apollo/client';\nimport { GetFilteredDossiers } from '../../helpers/general.helper';\nimport { DELETE_OBSERVATION_FILE } from '../../graphql/observation_file/ObservationFile.mutations';\nimport { CREATE_DOSSIER_PATH } from '../../routes/paths';\n\nconst GetObservationFiles = () => {\n    const { loading, data } = useQuery(GET_OBSERVATION_FILES, {\n      fetchPolicy: 'cache-and-network',\n    });\n  \n    if (loading) return { loading: true, observationFiles: [] };\n    const removeEmpty = data.getObservationFiles.filter(file => file.observations.length === 0);\n    const validFiles = data.getObservationFiles.filter(file => file.observations.length >= 1);\n    return (data && { loading: false, observationFiles: validFiles, trash: removeEmpty }) || [];\n};\n\nconst OverviewPage = () => {\n    const { loading, observationFiles, trash } = GetObservationFiles();\n    const observationFilesFiltered = observationFiles && GetFilteredDossiers(observationFiles);\n    const { morningDossiers, afternoonDossiers, eveningDossiers, nightDossiers } = observationFilesFiltered || {};\n    const [dialog, setDialog] = useState({ open: false, dossier: null});\n\n    const setDetailView = dossier => {\n        setDialog({\n            open: true,\n            dossier,\n        });\n    };\n\n    const [deleteObservationFile] = useMutation(DELETE_OBSERVATION_FILE, {\n        onCompleted: data => {\n            console.log(data.deleteObservationFile);\n        },\n        onError: error => { console.log(error); }, \n    });\n\n    // Not so clean at all, prevents filling DB with useless files\n    useEffect(() => {\n        if (trash && trash.length > 0) {\n            for (let i = 0; i < trash.length; i += 1) {\n                deleteObservationFile({\n                   variables: {\n                       id: trash[i].id,\n                   },\n           });\n           }\n        }\n    }, [trash && trash.length > 0]);\n\n    if (loading) return (\n        <Box display=\"flex\" justifyContent=\"center\" alignItems=\"center\" height=\"100%\" >\n            <CircularProgress color=\"secondary\" />\n        </Box>\n    );\n    \n    if (observationFiles.length === 0) return (\n        <Box display=\"flex\" flexDirection=\"column\" justifyContent=\"center\" alignItems=\"center\" height=\"calc(100% - 167px)\">\n            <Typography gutterBottom>\n                Er zijn nog geen observatiedossiers\n            </Typography>\n            <Link\n                underline=\"always\"\n                component=\"a\"\n                color=\"secondary\"\n                href={CREATE_DOSSIER_PATH}\n            >\n                Start een nieuw observatiedossier\n            </Link>\n        </Box>\n    );\n\n    return (\n        <Main transparent>\n            <Box>\n                {morningDossiers && morningDossiers.length > 0 && (\n                    <Accordion defaultExpanded={morningDossiers.length <= 2}>\n                        <AccordionSummary\n                            expandIcon={<ExpandMoreOutlined color=\"primary\" />}\n                        >\n                        <Typography color=\"primary\">\n                            {`Ochtend (${morningDossiers.length})`}\n                        </Typography>\n                        </AccordionSummary>\n                        <AccordionDetails>\n                            <Box display=\"flex\" flexDirection=\"column\" width=\"100%\">\n                                {morningDossiers.map(dossier => (\n                                    <Box key={dossier.id} display=\"flex\" alignItems=\"center\" justifyContent=\"space-between\">\n                                        <Typography variant=\"body2\">\n                                            {`${dossier.client.first_name} ${dossier.client.last_name}`}\n                                        </Typography>\n                                        <IconButton size=\"small\" color=\"primary\" onClick={() => setDetailView(dossier)}>\n                                            <InfoOutlined />\n                                        </IconButton>\n                                    </Box>\n                                ))}\n                            </Box>\n                        </AccordionDetails>\n                    </Accordion>\n                )}\n\n                {afternoonDossiers && afternoonDossiers.length > 0 && (\n                    <Accordion defaultExpanded={afternoonDossiers.length <= 2}>\n                        <AccordionSummary\n                            expandIcon={<ExpandMoreOutlined color=\"primary\" />}\n                        >\n                        <Typography color=\"primary\">\n                            {`Middag (${afternoonDossiers.length})`}\n                        </Typography>\n                        </AccordionSummary>\n                        <AccordionDetails>\n                            <Box display=\"flex\" flexDirection=\"column\" width=\"100%\">\n                                {afternoonDossiers.map(dossier => (\n                                    <Box key={dossier.id} display=\"flex\" alignItems=\"center\" justifyContent=\"space-between\">\n                                        <Typography variant=\"body2\">\n                                            {`${dossier.client.first_name} ${dossier.client.last_name}`}\n                                        </Typography>\n                                        <IconButton size=\"small\" color=\"primary\" onClick={() => setDetailView(dossier)}>\n                                            <InfoOutlined />\n                                        </IconButton>\n                                    </Box>\n                                ))}\n                            </Box>\n                        </AccordionDetails>\n                    </Accordion>\n                )}\n\n                {eveningDossiers && eveningDossiers.length > 0 && (\n                    <Accordion defaultExpanded={eveningDossiers.length <= 2}>\n                        <AccordionSummary\n                            expandIcon={<ExpandMoreOutlined color=\"primary\" />}\n                        >\n                        <Typography color=\"primary\">\n                            {`Avond (${eveningDossiers.length})`}\n                        </Typography>\n                        </AccordionSummary>\n                        <AccordionDetails>\n                            <Box display=\"flex\" flexDirection=\"column\" width=\"100%\">\n                                {eveningDossiers.map(dossier => (\n                                    <Box key={dossier.id} display=\"flex\" alignItems=\"center\" justifyContent=\"space-between\">\n                                        <Typography variant=\"body2\">\n                                            {`${dossier.client.first_name} ${dossier.client.last_name}`}\n                                        </Typography>\n                                        <IconButton size=\"small\" color=\"primary\" onClick={() => setDetailView(dossier)}>\n                                            <InfoOutlined />\n                                        </IconButton>\n                                    </Box>\n                                ))}\n                            </Box>\n                        </AccordionDetails>\n                    </Accordion>\n                )}\n\n                {nightDossiers && nightDossiers.length > 0 && (\n                    <Accordion defaultExpanded={nightDossiers.length <= 2}>\n                        <AccordionSummary\n                            expandIcon={<ExpandMoreOutlined color=\"primary\" />}\n                        >\n                        <Typography color=\"primary\">\n                            {`Nacht (${nightDossiers.length})`}\n                        </Typography>\n                        </AccordionSummary>\n                        <AccordionDetails>\n                            <Box display=\"flex\" flexDirection=\"column\" width=\"100%\">\n                                {nightDossiers.map(dossier => (\n                                    <Box key={dossier.id} display=\"flex\" alignItems=\"center\" justifyContent=\"space-between\">\n                                        <Typography variant=\"body2\">\n                                            {`${dossier.client.first_name} ${dossier.client.last_name}`}\n                                        </Typography>\n                                        <IconButton size=\"small\" color=\"primary\" onClick={() => setDetailView(dossier)}>\n                                            <InfoOutlined />\n                                        </IconButton>\n                                    </Box>\n                                ))}\n                            </Box>\n                        </AccordionDetails>\n                    </Accordion>\n                )}\n            </Box>\n\n            <Dialog \n                open={dialog.open}\n                onClose={() => setDialog({ open: false, dossier: null })}\n                fullWidth \n                maxWidth=\"xl\" \n                TransitionComponent={Zoom}\n            >\n                <DialogContent>\n                    <DetailView content={dialog.dossier} />\n                </DialogContent>\n                <DialogActions>\n                    <Button color=\"primary\" variant=\"outlined\" onClick={() => setDialog({ open: false, dossier: null })}>\n                        Sluiten\n                    </Button>\n                </DialogActions>\n            </Dialog>\n        </Main>\n    );\n};\n\nexport default OverviewPage;\n","/Users/ruben/Workspace/School/arj-frontend/src/pages/admin/Admin.page.jsx",[],"/Users/ruben/Workspace/School/arj-frontend/src/components/forms/index.js",[],"/Users/ruben/Workspace/School/arj-frontend/src/components/forms/Client.form.jsx",[],"/Users/ruben/Workspace/School/arj-frontend/src/components/forms/User.form.jsx",[],"/Users/ruben/Workspace/School/arj-frontend/src/components/fields/index.js",[],"/Users/ruben/Workspace/School/arj-frontend/src/components/fields/SelectField.jsx",["228","229"],"import React, { useState } from 'react';\nimport PropTypes from 'prop-types';\n\n// Core\nimport { \n    MenuItem,\n    Select as MuiSelectField,\n} from '@material-ui/core';\n\n// Styles\nimport { useFieldStyles } from './field.style';\n\nconst SelectField = props => {\n    const {\n        disabled,\n        onChange,\n        errors,\n        label,\n        value,\n        required,\n        items,\n        ...rest\n      } = props;\n\n    const classes = useFieldStyles();\n    // const errorText = errors && errors[id];\n\n    return (\n        <MuiSelectField\n            style={{ marginBottom: 16 }}\n            {...rest}\n            placeholder={label}\n            value={value ||  ''}\n            required={required}\n            disabled={disabled}\n            onChange={onChange || ((event) => onChange(event.target.value))}\n            // error={!!errorText}\n            variant=\"outlined\" \n            color=\"primary\"\n            displayEmpty\n        >\n            <MenuItem value=\"\" disabled>\n                Selecteer een {label.toLowerCase()}\n            </MenuItem>\n            \n            {Object.values(items).map((value, index) => (\n                <MenuItem key={value.id || index} value={value.id || value}>\n                    {value.id ? (\n                        `${value.first_name || value.name} ${value.last_name || ''}`\n                    ) : (\n                        value\n                    )}\n                </MenuItem>\n            ))}\n        </MuiSelectField>\n    )\n};\n\nSelectField.propTypes = {\n    disabled: PropTypes.bool,\n    // errors: PropTypes.object,\n    onChange: PropTypes.func,\n    label: PropTypes.string,\n    id: PropTypes.string,\n    value: PropTypes.any,\n    required: PropTypes.bool,\n    items: PropTypes.oneOfType([\n        PropTypes.array.isRequired,\n        PropTypes.object.isRequired,\n    ])\n};\n\nexport default SelectField;","/Users/ruben/Workspace/School/arj-frontend/src/components/fields/TextField.jsx",[],"/Users/ruben/Workspace/School/arj-frontend/src/components/fields/field.style.js",[],"/Users/ruben/Workspace/School/arj-frontend/src/graphql/index.js",[],"/Users/ruben/Workspace/School/arj-frontend/src/graphql/clients/Client.mutations.js",[],"/Users/ruben/Workspace/School/arj-frontend/src/graphql/clients/Client.queries.js",[],"/Users/ruben/Workspace/School/arj-frontend/src/graphql/users/User.queries.js",[],"/Users/ruben/Workspace/School/arj-frontend/src/graphql/users/User.mutations.js",[],"/Users/ruben/Workspace/School/arj-frontend/src/pages/listpages/Dossier_list.page.jsx",[],"/Users/ruben/Workspace/School/arj-frontend/src/pages/listpages/Client_list.page.jsx",["230"],"import React, { Fragment, useState } from 'react';\nimport { useQuery } from '@apollo/client';\n\n// Icons\nimport { InfoOutlined, Search } from '@material-ui/icons';\n\n// Core\nimport { DetailView, Main } from '../../components/layout';\n\n// GraphQL\nimport { GET_CLIENTS } from '../../graphql';\nimport { Box, Button, CircularProgress, Dialog, DialogActions, DialogContent, Divider, IconButton, List, ListItem, ListItemSecondaryAction, ListItemText, Typography, Zoom } from '@material-ui/core';\n\nconst GetClients = () => {\n    const { loading, data } = useQuery(GET_CLIENTS, {\n      fetchPolicy: 'cache-and-network',\n    });\n  \n    if (loading) return { loading: true, clients: [] };\n    return (data && { loading: false, clients: data.getClients }) || [];\n};\n\nconst ClientListPage = () => {\n  const { clients, loading } = GetClients();\n  const [dialog, setDialog] = useState({ open: false, id: null });\n\n  if (loading) return <Box display=\"flex\" justifyContent=\"center\" alignItems=\"center\" height=\"100%\" ><CircularProgress color=\"secondary\" /></Box>;\n\n  return (\n      <Fragment>\n        <Main>\n            <Box pb={1}>\n                <Typography variant=\"caption\">\n                    {`Totaal: ${clients.length}`}\n                </Typography>\n            </Box>\n            <Divider />\n            <List>\n                {clients.map((client, index) => (\n                    <Fragment key={client.id}>\n                        <ListItem disableGutters>\n                            <ListItemText \n                                primary={`${client.first_name} ${client.last_name}`}\n                                primaryTypographyProps={{\n                                    variant: 'body2'\n                                }}\n                            />\n                            <ListItemSecondaryAction>\n                                <IconButton color=\"primary\" edge=\"end\" onClick={() => setDialog({ open: true, id: client.id })}>\n                                    <InfoOutlined />\n                                </IconButton>\n                            </ListItemSecondaryAction>\n                        </ListItem>\n                        \n                        {((index + 1 !== clients.length) && (\n                            <Box>\n                                <Divider />\n                            </Box>\n                        ))}\n                    </Fragment>\n                ))}\n            </List>\n        </Main>\n\n        <Dialog \n            open={dialog.open} \n            fullWidth \n            maxWidth=\"xl\" \n            TransitionComponent={Zoom}\n        >\n            <DialogContent>\n                <DetailView type=\"client\" id={dialog.id} />\n            </DialogContent>\n            <DialogActions>\n                <Button color=\"primary\" variant=\"outlined\" onClick={() => setDialog({ open: false })}>\n                    Sluiten\n                </Button>\n            </DialogActions>\n        </Dialog>\n      </Fragment>\n  )\n};\n\nexport default ClientListPage;\n","/Users/ruben/Workspace/School/arj-frontend/src/constants/general.const.js",[],"/Users/ruben/Workspace/School/arj-frontend/src/components/layout/DetailView/DetailView.jsx",["231","232"],"import React, { Fragment } from 'react';\nimport PropTypes from 'prop-types';\nimport { useQuery } from '@apollo/client';\n\n// Core\nimport { Box, CircularProgress, Divider, List, ListItem, ListItemText, Typography } from '@material-ui/core';\n\n// GraphQL\nimport { GET_CLIENT } from '../../../graphql';\nimport ListPair from '../ListPair/ListPair';\n\nconst GetClientById = id => {\n    const { loading, data } = useQuery(GET_CLIENT, {\n      variables: { id },\n      fetchPolicy: 'cache-and-network',\n    });\n  \n    if (loading) return { loading: true, client: {} };\n    return (data && { loading: false, client: data.getClient }) || [];\n};\n\nconst DetailView = ({ id, type, content }) => {\n    const { client, loading } = (id !== undefined && type === 'client') && GetClientById(id);\n    const createdAt = content && new Date(content.createdAt);\n\n    if (loading) return <Box display=\"flex\" justifyContent=\"center\" alignItems=\"center\" height=\"100%\" ><CircularProgress color=\"secondary\" /></Box>;\n\n    return (\n        <Fragment>\n            {client && (\n                <List>\n                    <Box py={2} display=\"flex\" flexDirection=\"column\">\n                        <ListPair\n                            dense\n                            primary=\"Naam\"\n                            secondary={`${client.first_name} ${client.last_name}`}\n                        />\n                        <ListPair\n                            dense\n                            primary=\"Geboortedatum\"\n                            secondary={client.birthday}\n                        />\n                        <ListPair\n                            dense\n                            primary=\"Contactpersoon\"\n                            secondary={client.contact_person}\n                        />\n                    </Box>\n                </List>\n            )}\n\n            {content && (\n                <List>\n                    <Typography gutterBottom color=\"primary\" style={{ fontWeight: 600 }}>\n                        Clientgegevens\n                    </Typography>\n                    <Divider />\n                    <Box py={2} display=\"flex\" flexDirection=\"column\">\n                        <ListPair\n                            dense\n                            primary=\"Naam\"\n                            secondary={`${content.client.first_name} ${content.client.last_name}`}\n                        />\n                        <ListPair\n                            dense\n                            primary=\"Geboortedatum\"\n                            secondary={content.client.birthday}\n                        />\n                        <ListPair\n                            dense\n                            primary=\"Contactpersoon\"\n                            secondary={content.client.contact_person}\n                        />\n                    </Box>\n\n                    <Typography gutterBottom color=\"primary\" style={{ fontWeight: 600 }}>\n                        Observaties\n                    </Typography>\n                    <Divider />\n                    <Box py={2} display=\"flex\" flexDirection=\"column\">\n                        {content.observations.map(({ id, description }, index) => (\n                            <Box key={id} pb={1}>\n                                <Typography variant=\"body2\" color=\"primary\" gutterBottom style={{ fontWeight: 600 }}>\n                                    {`${index + 1}.`}\n                                </Typography>\n                                <Typography variant=\"body2\" gutterBottom>\n                                    {description}\n                                </Typography>\n                            </Box>\n                        ))}\n                    </Box>\n\n                    <Typography gutterBottom color=\"primary\" style={{ fontWeight: 600 }}>\n                        Dossierinformatie\n                    </Typography>    \n                    <Divider />\n                    <Box py={2} display=\"flex\" flexDirection=\"column\">\n                        <ListPair\n                            dense\n                            primary=\"Dienst\"\n                            secondary={content.shift}\n                        />\n                        <ListPair\n                            dense\n                            primary=\"Verzorgende\"\n                            secondary={content.user ? content.user.name : 'Onbekend'}\n                        />\n                        <ListPair\n                            dense\n                            primary=\"Datum & tijdstip\"\n                            secondary={createdAt.toLocaleString('nl-NL')}\n                        />\n                    </Box>\n                </List>\n            )}\n            {(!client && !content) && (<CircularProgress color=\"secondary\" />)}\n        </Fragment>\n    );\n};\n\nDetailView.propTypes = {\n    id: PropTypes.string,\n    type: PropTypes.string,\n    content: PropTypes.object,\n};\n\nexport default DetailView;","/Users/ruben/Workspace/School/arj-frontend/src/pages/dossier/Create_dossier.page.jsx",[],"/Users/ruben/Workspace/School/arj-frontend/src/components/forms/Observation.form.jsx",[],"/Users/ruben/Workspace/School/arj-frontend/src/graphql/observation_file/ObservationFile.mutations.js",[],"/Users/ruben/Workspace/School/arj-frontend/src/components/forms/CreateObservationFile.form.jsx",["233"],"import React, { useContext } from 'react';\nimport { Controller, useForm } from 'react-hook-form';\nimport PropTypes from 'prop-types';\nimport { useSnackbar } from 'notistack';\nimport { useMutation } from '@apollo/client';\nimport { useHistory, useLocation } from 'react-router-dom';\n\n// Icons\nimport { ChevronRight } from '@material-ui/icons';\n\n// Core\nimport { Box, Button } from '@material-ui/core';\nimport { SelectField } from '../fields';\nimport { SHIFTS } from '../../constants/general.const';\nimport { UserContext } from '../../providers/User.provider';\n\n// GraphQL\nimport { CREATE_OBSERVATION_FILE } from '../../graphql/observation_file/ObservationFile.mutations';\n\nconst CreateObservationFileForm = ({ clients, handleNext }) => {\n    const history = useHistory();\n    const location = useLocation();\n    const { handleSubmit, errors, control } = useForm();\n    const { enqueueSnackbar } = useSnackbar();\n    const { userState } = useContext(UserContext);\n\n    const clientValues = clients;\n\n    const [createObservationFile] = useMutation(CREATE_OBSERVATION_FILE, {\n        onCompleted: data => {\n            enqueueSnackbar(`Nieuw observatiedossier aangemaakt!`, { variant: 'success' });\n            history.push({ state: { id: data.addObservationFile.id }})\n            handleNext();\n        },\n        onError: () => { enqueueSnackbar(`Er ging iets verkeerd!`, { variant: 'error' }); },\n      });\n\n    const handleSubmitForm = async values => {\n      values.user = userState.id;\n      values.observations = [];\n      await createObservationFile({ variables: { ...values } });\n    };\n\n    return (\n        <form onSubmit={handleSubmit(handleSubmitForm)}>\n            <Box py={2}>\n                <Controller\n                    margin=\"dense\"\n                    as={SelectField}\n                    name=\"client\"\n                    label=\"Cliënt\"\n                    items={clientValues}\n                    control={control}\n                    errors={errors}\n                    required\n                    fullWidth\n                />\n\n                <Controller\n                    margin=\"dense\"\n                    as={SelectField}\n                    name=\"shift\"\n                    label=\"Dienst\"\n                    items={SHIFTS}\n                    control={control}\n                    errors={errors}\n                    required\n                    fullWidth\n                />\n            </Box>\n\n            <Box width=\"100%\" display=\"flex\" justifyContent=\"flex-end\">\n                <Button \n                    type=\"submit\"\n                    variant=\"contained\"\n                    fullWidth\n                    color=\"primary\" \n                    endIcon={<ChevronRight />}\n                >\n                    Verder\n                </Button>\n            </Box>\n        </form>\n    );\n};\n\nCreateObservationFileForm.propTypes = {\n    clients: PropTypes.array.isRequired,\n    handleNext: PropTypes.func.isRequired,\n};\n\nexport default CreateObservationFileForm;","/Users/ruben/Workspace/School/arj-frontend/src/graphql/observation_file/ObservationFile.queries.js",[],"/Users/ruben/Workspace/School/arj-frontend/src/components/forms/Overview.form.jsx",[],"/Users/ruben/Workspace/School/arj-frontend/src/components/Dictaphone/Dictaphone.jsx",[],"/Users/ruben/Workspace/School/arj-frontend/src/graphql/observations/Observation.mutation.js",[],"/Users/ruben/Workspace/School/arj-frontend/src/components/fields/CheckboxField.jsx",[],"/Users/ruben/Workspace/School/arj-frontend/src/components/navigation/Bottombar/Bottombar.jsx",[],"/Users/ruben/Workspace/School/arj-frontend/src/helpers/general.helper.js",[],"/Users/ruben/Workspace/School/arj-frontend/src/components/layout/ListPair/ListPair.jsx",[],"/Users/ruben/Workspace/School/arj-frontend/src/providers/User.provider.jsx",["234"],"import React, { createContext, useEffect, useState } from 'react';\n\nexport const UserContext = createContext({});\n\nexport const UserProvider = ({ children }) => {\n  const [userState, setUserState] = useState(JSON.parse(sessionStorage.getItem('user')) || null);;\n\n  const setUser = user => {\n    sessionStorage.setItem('user', JSON.stringify(user));\n    setUserState(user);\n  };\n\n  return (\n    <UserContext.Provider value={{ userState, setUser }}>\n        {children}\n    </UserContext.Provider>\n  );\n};\n","/Users/ruben/Workspace/School/arj-frontend/src/providers/index.js",[],"/Users/ruben/Workspace/School/arj-frontend/src/components/App/DialogWelcome/DialogWelcome.jsx",[],{"ruleId":"235","replacedBy":"236"},{"ruleId":"237","replacedBy":"238"},{"ruleId":"239","severity":1,"message":"240","line":43,"column":1,"nodeType":"241","endLine":49,"endColumn":5},{"ruleId":"235","replacedBy":"242"},{"ruleId":"237","replacedBy":"243"},{"ruleId":"244","severity":1,"message":"245","line":27,"column":10,"nodeType":"246","messageId":"247","endLine":27,"endColumn":21},{"ruleId":"244","severity":1,"message":"248","line":61,"column":20,"nodeType":"246","messageId":"247","endLine":61,"endColumn":25},{"ruleId":"249","severity":1,"message":"250","line":67,"column":6,"nodeType":"251","endLine":67,"endColumn":8,"suggestions":"252"},{"ruleId":"244","severity":1,"message":"253","line":1,"column":22,"nodeType":"246","messageId":"247","endLine":1,"endColumn":26},{"ruleId":"249","severity":1,"message":"254","line":69,"column":8,"nodeType":"251","endLine":69,"endColumn":35,"suggestions":"255"},{"ruleId":"249","severity":1,"message":"256","line":69,"column":9,"nodeType":"257","endLine":69,"endColumn":34},{"ruleId":"244","severity":1,"message":"258","line":1,"column":17,"nodeType":"246","messageId":"247","endLine":1,"endColumn":25},{"ruleId":"244","severity":1,"message":"259","line":25,"column":11,"nodeType":"246","messageId":"247","endLine":25,"endColumn":18},{"ruleId":"244","severity":1,"message":"260","line":5,"column":24,"nodeType":"246","messageId":"247","endLine":5,"endColumn":30},{"ruleId":"244","severity":1,"message":"261","line":6,"column":48,"nodeType":"246","messageId":"247","endLine":6,"endColumn":56},{"ruleId":"244","severity":1,"message":"262","line":6,"column":58,"nodeType":"246","messageId":"247","endLine":6,"endColumn":70},{"ruleId":"244","severity":1,"message":"263","line":22,"column":11,"nodeType":"246","messageId":"247","endLine":22,"endColumn":19},{"ruleId":"244","severity":1,"message":"264","line":1,"column":32,"nodeType":"246","messageId":"247","endLine":1,"endColumn":41},"no-native-reassign",["265"],"no-negated-in-lhs",["266"],"import/no-anonymous-default-export","Assign object to a variable before exporting as module default","ExportDefaultDeclaration",["265"],["266"],"no-unused-vars","'SelectField' is defined but never used.","Identifier","unusedVar","'users' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'setValue' and 'userState'. Either include them or remove the dependency array.","ArrayExpression",["267"],"'fade' is defined but never used.","React Hook useEffect has missing dependencies: 'deleteObservationFile' and 'trash'. Either include them or remove the dependency array.",["268"],"React Hook useEffect has a complex expression in the dependency array. Extract it to a separate variable so it can be statically checked.","LogicalExpression","'useState' is defined but never used.","'classes' is assigned a value but never used.","'Search' is defined but never used.","'ListItem' is defined but never used.","'ListItemText' is defined but never used.","'location' is assigned a value but never used.","'useEffect' is defined but never used.","no-global-assign","no-unsafe-negation",{"desc":"269","fix":"270"},{"desc":"271","fix":"272"},"Update the dependencies array to be: [setValue, userState]",{"range":"273","text":"274"},"Update the dependencies array to be: [deleteObservationFile, trash]",{"range":"275","text":"276"},[1775,1777],"[setValue, userState]",[2439,2466],"[deleteObservationFile, trash]"]